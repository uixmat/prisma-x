// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  firstName String?
  lastName  String?
  nickname  String?
  status    UserStatus @default(ACTIVE)
  roles     UserRole[] // Changed to UserRole relation

  // Metadata
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([email])
  @@map("users")
}

model Role {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?
  users       UserRole[] // Changed to UserRole relation

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@map("roles")
}

// New explicit join model
model UserRole {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId String

  @@id([userId, roleId])
  @@map("user_roles")
}
